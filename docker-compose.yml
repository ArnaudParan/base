---
version: "3.9"
services:
  db:
    image: postgres:13.1
    environment:
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db:/var/lib/postgresql/data:rw
      - ./docker/create_users.sql:/docker-entrypoint-initdb.d/create_users.sql:ro
  snowpack:
    image: node:16
    volumes:
      - .:/srv:rw
    ports:
      - '${EPORT}:${SPORT}'
    environment:
      - WDIR=/srv
      - PYBACK=py:${PYPORT}
      - RBACK=rust:${RPORT}
      - SHOST=0.0.0.0
      - SPORT=${SPORT}
      - PROXY_PY=http://py:${PYPORT}/
      - PROXY_R=http://rust:${RPORT}/
    entrypoint: bash /srv/docker/snowpack-front.sh
    links:
      - rust
      - py
  py:
    build:
      context: ./docker
      dockerfile: Dockerfile-py
    volumes:
      - .:/srv:ro
      - py-venv:/var/venv:rw
    environment:
      - VENV=/var/venv
      - WDIR=/srv
      - DATABASE_URL=postgres://${DB_USER}:${DB_PWD}@db/${DB_NAME}
      - GHOST=0.0.0.0:${PYPORT}
    links:
      - db
    entrypoint: bash /srv/docker/py-back.sh
  rust:
    build:
      context: ./docker
      dockerfile: Dockerfile-rust
    volumes:
      - .:/srv:ro
      - cargo:/var/cache/cargo:rw
    environment:
      - WDIR=/srv
      - DATABASE_URL=postgres://${DB_USER}:${DB_PWD}@db/${DB_NAME}
      - RHOST=0.0.0.0:${RPORT}
    links:
      - db
    entrypoint: bash /srv/docker/rust-back.sh
volumes:
  py-venv:
  cargo:
  db:
